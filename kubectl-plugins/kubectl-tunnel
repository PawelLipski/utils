#!/usr/bin/env bash

set -e -o pipefail -u

maybe_option=$1
if [[ $maybe_option == "--https" ]]; then
  protocol=https
  shift
else
  protocol=http
fi

if [[ $# -ne 4 ]] && [[ $# -ne 5 ]] && [[ $# -ne 7 ]]; then
  echo "Usage: kubectl tunnel [--https] <k8s_namespace> <k8s_service> <local_port> <service_port> [<url_path> [<password_secret_name> <password_secret_key>]]"
  echo
  echo "Example: kubectl tunnel --https  keycloak keycloak  8443 8443 /auth/admin/master/console/#/realms/phoenix  credential-keycloak ADMIN_PASSWORD"
  echo "Example: kubectl tunnel  monitoring prometheus-operator-kube-p-prometheus  9090 9090"
  exit 2
fi

k8s_namespace=$1
k8s_service=$2
local_port=$3
service_port=$4
url_path=${5-}
password_secret_name=${6-}
password_secret_key=${7-}

if nc -z localhost "$local_port" &>/dev/null; then
  echo "Port $local_port already bound - is $k8s_service port-forward already running?"
  exit 1
fi

function copy_to_clipboard() {
  if command -v pbcopy &>/dev/null; then
    pbcopy  # Mac OS
  else
    xclip -selection clipboard  # Linux
  fi
}

if [[ $password_secret_name ]] && [[ $password_secret_key ]]; then
  kubectl get secret "$password_secret_name" -n "$k8s_namespace" -o jsonpath="{.data.$password_secret_key}" | base64 -d | copy_to_clipboard
  echo "Password for 'admin' user copied to clipboard"
fi

set -o monitor
kubectl port-forward "service/$k8s_service" "$local_port:$service_port" -n "$k8s_namespace" &

until nc -z localhost "$local_port" &>/dev/null; do
  sleep 0.5
done

function open_url() {
  if command -v xdg-open &>/dev/null; then
    xdg-open "$@"  # Linux
  else
    open "$@"  # Mac OS
  fi
}

open_url "$protocol://localhost:$local_port$url_path" &>/dev/null
fg >/dev/null
